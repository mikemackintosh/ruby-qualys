# frozen_string_literal: true

require 'spec_helper'

RSpec.describe Qualys::Vulnerability, type: :model do
  let(:vulnerabilities) { Qualys::Report.create.hosts.first.vulnerabilities }
  let(:vulnerability) { vulnerabilities[0] }
  let(:vulnerability_with_cve) { vulnerabilities[5] }
  let(:rich_vulnerability) { vulnerabilities[11] }

  describe '#initialize' do
    it 'initialize all elements for a basic vulnerability' do
      stub_const('Qualys::Report::TIMEOUT', 0)
      VCR.use_cassette('templates') do
        VCR.use_cassette('global_report') do
          expect(vulnerability).to be_kind_of(Qualys::Vulnerability)
          expect(vulnerability.qid).to eq 'qid_38173'
          expect(vulnerability.type).to eq 'Vuln'
          expect(vulnerability.port).to eq '25'
          expect(vulnerability.service).to eq 'smtp'
          expect(vulnerability.protocol).to eq 'tcp'
          expect(vulnerability.ssl).to eq 'true'
          expect(vulnerability.result).to eq 'Certificate #0 CN=localhost.localdomain self signed certificate'
          expect(vulnerability.first_found).to eq '2017-12-07T08:12:19Z'
          expect(vulnerability.last_found).to eq '2017-12-07T08:12:19Z'
          expect(vulnerability.times_found).to eq '1'
          expect(vulnerability.status).to eq 'New'
        end
      end
    end

    it 'initializes the details' do
      stub_const('Qualys::Report::TIMEOUT', 0)
      VCR.use_cassette('templates') do
        VCR.use_cassette('global_report') do
          expect(vulnerability.details['id']).to eq vulnerability.qid
          expect(vulnerability.cve_code_list).to be_nil
          expect(vulnerability.title).to eq 'SSL Certificate - Signature Verification Failed Vulnerability'
          expect(vulnerability.severity).to eq '2'
          expect(vulnerability.category).to eq 'General remote services'
          expect(vulnerability.threat).to start_with 'An SSL Certificate associates an entity (person, organization'
          expect(vulnerability.impact).to start_with 'By exploiting this vulnerability, man-in-the-middle attacks'
          expect(vulnerability.solution).to start_with 'Please install a server certificate signed by a trusted'
          expect(vulnerability.pci_flag).to eq '1'
          expect(vulnerability.correlation).to be_nil
          expect(vulnerability.vendor_reference_list).to be_nil
          expect(vulnerability.last_update).to be_nil
          expect(vulnerability.url).to eq 'https://qualysguard.qualys.eu/fo/common/vuln_info.php?id=38173'
        end
      end
    end
  end
end
